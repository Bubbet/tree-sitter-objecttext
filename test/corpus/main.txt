===
Non Identifier Start
:error
===
"Yes"
---

===
Identifier
===
Valid._Identifier02 = ""
---
(source_file
    (assignment
        (identifier)
        (value
            (string))))

===
Single Char Identifier
===
V {}
---
(source_file
    (group
        key: (identifier)))


===
Invalid Identifier
===
..NotOK {}
---
(source_file
    (ERROR
        (UNEXPECTED '.'))
    (group
        (identifier)))

===
Invalid Identifier Space
===
. NotOK {}
---
(source_file
    (ERROR
        (UNEXPECTED ' '))
    (group
        (identifier)))


===
Weird But Valid Identifier
===
._OKAY {}
---
(source_file
    (group
        (identifier)))

===
Single Line Comment
===
Comment {}
// Single line comment
---
(source_file
    (group
        (identifier))
    (comment))

===
Multi Line Comment
===
Comment {}
/*
Single line comment
*/
---
(source_file
    (group
        (identifier))
    (comment))

===
Bare Word
===
Test = some kind of text for a language file
---
(source_file
    (assignment
        (identifier)
        (value
            (bare_word))))

===
Simple String
===
String = "Hi there."
---
(source_file
    (assignment
        (identifier)
        (value
            (string))))

===
Empty String
===
String = ""
---
(source_file
    (assignment
        (identifier)
        (value
            (string))))

===
String With Quotes
===
String = "\""
---
(source_file
    (assignment
        (identifier)
        (value
            (string))))

===
Invalid String
===
String = "
"
---
(source_file
      (assignment
        (identifier)
        (value
          (bare_word)))
      (ERROR))

===
Lists
===
List = []
---
(source_file
    (list
        (identifier)))

===
Nested Lists
===
List = [[]]
---
(source_file
    (list
        (identifier)
        (list)))

===
Named Nested Lists
===
List
[
    Second
    []
]
---
(source_file
    (list
        (identifier)
        (list
            (identifier))))

===
Groups
===
Group = {}
---
(source_file
    (group
        (identifier)))

===
Nested Groups
===
Group = {{}}
---
(source_file
    (group
        (identifier)
        (group)))

===
Named Nested Groups
===
Group
{
    Second
    {}
}
---
(source_file
    (group
        (identifier)
        (group
            (identifier))))

===
Inheritance Group
===
Object : Other
{}
---
(source_file
    (group
        (identifier)
        (extension
            (internal_reference
                (identifier)))))

===
Multi Inheritance Group
===
Object : Other, Other2 {}
---
(source_file
    (group
        (identifier)
        (extension
            (internal_reference
                (identifier)))
        (extension
            (internal_reference
                (identifier)))))

===
Inheritance Group
===
Object : Other
[]
---
(source_file
    (list
        (identifier)
        (extension
            (internal_reference
                (identifier)))))

===
Multi Inheritance Group
===
Object : Other, Other2 []
---
(source_file
    (list
        (identifier)
        (extension
            (internal_reference
                (identifier)))
        (extension
            (internal_reference
                (identifier)))))
